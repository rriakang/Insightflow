nohup: ignoring input
/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/papermill/iorw.py:149: UserWarning: the file is not specified with any extension : -
  warnings.warn(f"the file is not specified with any extension : {os.path.basename(path)}")
{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "ed8e1d9f",
   "metadata": {
    "tags": [
     "papermill-error-cell-tag"
    ]
   },
   "source": [
    "<span style=\"color:red; font-family:Helvetica Neue, Helvetica, Arial, sans-serif; font-size:2em;\">An Exception was encountered at '<a href=\"#papermill-error-cell\">In [6]</a>'.</span>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "62b60dfc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-13T03:41:26.051480Z",
     "iopub.status.busy": "2024-11-13T03:41:26.050750Z",
     "iopub.status.idle": "2024-11-13T03:41:42.649760Z",
     "shell.execute_reply": "2024-11-13T03:41:42.648813Z"
    },
    "papermill": {
     "duration": 16.603223,
     "end_time": "2024-11-13T03:41:42.651423",
     "exception": false,
     "start_time": "2024-11-13T03:41:26.048200",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "from googletrans import Translator\n",
    "\n",
    "\n",
    "df = pd.read_csv('/mount/nas/disk02/Data/Health/Mental_Health/BERT/real/train.csv')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "bd3dc610",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-13T03:41:42.653902Z",
     "iopub.status.busy": "2024-11-13T03:41:42.653074Z",
     "iopub.status.idle": "2024-11-13T03:41:56.574753Z",
     "shell.execute_reply": "2024-11-13T03:41:56.574008Z"
    },
    "papermill": {
     "duration": 13.926384,
     "end_time": "2024-11-13T03:41:56.577960",
     "exception": false,
     "start_time": "2024-11-13T03:41:42.651576",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "df = pd.read_csv('/mount/nas/disk02/Data/Health/Mental_Health/BERT/real/translated_data_final.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "a20a7693",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-13T03:41:56.579574Z",
     "iopub.status.busy": "2024-11-13T03:41:56.579407Z",
     "iopub.status.idle": "2024-11-13T03:41:56.595287Z",
     "shell.execute_reply": "2024-11-13T03:41:56.594640Z"
    },
    "papermill": {
     "duration": 0.062799,
     "end_time": "2024-11-13T03:41:56.641032",
     "exception": false,
     "start_time": "2024-11-13T03:41:56.578233",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>newsID</th>\n",
       "      <th>newsCategory</th>\n",
       "      <th>newsSubcategory</th>\n",
       "      <th>newsTitle</th>\n",
       "      <th>newsSubTitle</th>\n",
       "      <th>newsContent</th>\n",
       "      <th>partNum</th>\n",
       "      <th>useType</th>\n",
       "      <th>processType</th>\n",
       "      <th>processPattern</th>\n",
       "      <th>processLevel</th>\n",
       "      <th>sentenceCount</th>\n",
       "      <th>sentenceInfo</th>\n",
       "      <th>processSentencenum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>EC_M02_000001</td>\n",
       "      <td>경제</td>\n",
       "      <td>일반</td>\n",
       "      <td>[오늘의 SR이슈] 윤리 문제 불거진 종근당 회장 조사 마치고 귀가…\\\"사죄한다\\\"</td>\n",
       "      <td>NaN</td>\n",
       "      <td>\\\"사죄한다.\\\" 운전기사들에게 허구한 날 폭언을 퍼부어 윤리 문제가 불거진 이장한...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>9</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': '\\\\\"사죄한다...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>EC_M02_000006</td>\n",
       "      <td>경제</td>\n",
       "      <td>은행</td>\n",
       "      <td>한국기업지배구조원 733개 기업 ESG 등급 부여</td>\n",
       "      <td>NaN</td>\n",
       "      <td>한국기업지배구조원이 8월 31일 국내 상장회사의 환경경영(E), 사회책임경영(S),...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>13</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': '한국기업지배구...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>EC_M02_000008</td>\n",
       "      <td>경제</td>\n",
       "      <td>일반</td>\n",
       "      <td>2017 다우존스 지속가능경영지수 어떤 기업이 편입되었나?</td>\n",
       "      <td>NaN</td>\n",
       "      <td>런던 현지 시각으로 7일, 스탠다드앤푸어스 다우존스 인디시즈와 로베코샘이 다우존스지...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>9</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': '런던 현지 시...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>EC_M02_000009</td>\n",
       "      <td>경제</td>\n",
       "      <td>일반</td>\n",
       "      <td>[2017 DJSI] 지수 편입 국내 기업의 특징과 현황</td>\n",
       "      <td>NaN</td>\n",
       "      <td>한국생산성본부(회장 홍순직)는 9월 7일 '2017 다우존스 지속가능경영지수'(Do...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>22</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': \"한국생산성본부...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>EC_M02_000011</td>\n",
       "      <td>경제</td>\n",
       "      <td>은행</td>\n",
       "      <td>한국교직원공제회, 13일 스튜어드십 코드 도입, 사회책임투자 전면 시행 결정</td>\n",
       "      <td>NaN</td>\n",
       "      <td>한국교직원공제회는 13일 운영위원회를 열어 스튜어드십 코드를 도입하기로 결정했다.\\...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>13</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': '한국교직원공제...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225493</th>\n",
       "      <td>SO_M07_924890</td>\n",
       "      <td>사회</td>\n",
       "      <td>Country</td>\n",
       "      <td>There's a group of 55 new team members, 220 in...</td>\n",
       "      <td>Fifty-two teams of people using STEAM to solve...</td>\n",
       "      <td>A group of students and high school students i...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>8</td>\n",
       "      <td>[\"Sentence No\": 1, 'SentenceContensant': The g...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225494</th>\n",
       "      <td>SO_M07_924892</td>\n",
       "      <td>사회</td>\n",
       "      <td>Social General</td>\n",
       "      <td>Yuan victim, meta-responsibility.....similarit...</td>\n",
       "      <td>\"Arise from the brainwashing of the Korean gov...</td>\n",
       "      <td>\"It is a wonderful day to live in Japan's SNS,...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>9</td>\n",
       "      <td>[\"Extensence No\": One's story:'sentenceContens...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225495</th>\n",
       "      <td>SO_M07_924897</td>\n",
       "      <td>사회</td>\n",
       "      <td>Social General</td>\n",
       "      <td>\"You haven't left yet...\"</td>\n",
       "      <td>I recommend summer travel items such as Coreyl...</td>\n",
       "      <td>The following 16 days, Corlelell announced tha...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>14</td>\n",
       "      <td>[\"Extensence No\": One's Saint-Systress for a l...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225496</th>\n",
       "      <td>SO_M07_924909</td>\n",
       "      <td>사회</td>\n",
       "      <td>Social General</td>\n",
       "      <td>Half a mental patient is not getting a medical...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>An analysis indicates that more than half of t...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>11</td>\n",
       "      <td>['SentenceNo': 1,'senceContensant': More than ...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225497</th>\n",
       "      <td>SO_M07_924915</td>\n",
       "      <td>사회</td>\n",
       "      <td>Country</td>\n",
       "      <td>Attention, the Ministry of Education, Superlig...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>For example, in the United States, in the Unit...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>7</td>\n",
       "      <td>[\"Extensence No': One'sence Conservations': 'E...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>225498 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               newsID newsCategory newsSubcategory  \\\n",
       "0       EC_M02_000001           경제              일반   \n",
       "1       EC_M02_000006           경제              은행   \n",
       "2       EC_M02_000008           경제              일반   \n",
       "3       EC_M02_000009           경제              일반   \n",
       "4       EC_M02_000011           경제              은행   \n",
       "...               ...          ...             ...   \n",
       "225493  SO_M07_924890           사회         Country   \n",
       "225494  SO_M07_924892           사회  Social General   \n",
       "225495  SO_M07_924897           사회  Social General   \n",
       "225496  SO_M07_924909           사회  Social General   \n",
       "225497  SO_M07_924915           사회         Country   \n",
       "\n",
       "                                                newsTitle  \\\n",
       "0          [오늘의 SR이슈] 윤리 문제 불거진 종근당 회장 조사 마치고 귀가…\\\"사죄한다\\\"   \n",
       "1                             한국기업지배구조원 733개 기업 ESG 등급 부여   \n",
       "2                        2017 다우존스 지속가능경영지수 어떤 기업이 편입되었나?   \n",
       "3                         [2017 DJSI] 지수 편입 국내 기업의 특징과 현황   \n",
       "4              한국교직원공제회, 13일 스튜어드십 코드 도입, 사회책임투자 전면 시행 결정   \n",
       "...                                                   ...   \n",
       "225493  There's a group of 55 new team members, 220 in...   \n",
       "225494  Yuan victim, meta-responsibility.....similarit...   \n",
       "225495                          \"You haven't left yet...\"   \n",
       "225496  Half a mental patient is not getting a medical...   \n",
       "225497  Attention, the Ministry of Education, Superlig...   \n",
       "\n",
       "                                             newsSubTitle  \\\n",
       "0                                                     NaN   \n",
       "1                                                     NaN   \n",
       "2                                                     NaN   \n",
       "3                                                     NaN   \n",
       "4                                                     NaN   \n",
       "...                                                   ...   \n",
       "225493  Fifty-two teams of people using STEAM to solve...   \n",
       "225494  \"Arise from the brainwashing of the Korean gov...   \n",
       "225495  I recommend summer travel items such as Coreyl...   \n",
       "225496                                                NaN   \n",
       "225497                                                NaN   \n",
       "\n",
       "                                              newsContent partNum  useType  \\\n",
       "0       \\\"사죄한다.\\\" 운전기사들에게 허구한 날 폭언을 퍼부어 윤리 문제가 불거진 이장한...      P1        0   \n",
       "1       한국기업지배구조원이 8월 31일 국내 상장회사의 환경경영(E), 사회책임경영(S),...      P1        0   \n",
       "2       런던 현지 시각으로 7일, 스탠다드앤푸어스 다우존스 인디시즈와 로베코샘이 다우존스지...      P1        0   \n",
       "3       한국생산성본부(회장 홍순직)는 9월 7일 '2017 다우존스 지속가능경영지수'(Do...      P1        0   \n",
       "4       한국교직원공제회는 13일 운영위원회를 열어 스튜어드십 코드를 도입하기로 결정했다.\\...      P1        0   \n",
       "...                                                   ...     ...      ...   \n",
       "225493  A group of students and high school students i...      P2        1   \n",
       "225494  \"It is a wonderful day to live in Japan's SNS,...      P2        1   \n",
       "225495  The following 16 days, Corlelell announced tha...      P2        1   \n",
       "225496  An analysis indicates that more than half of t...      P2        1   \n",
       "225497  For example, in the United States, in the Unit...      P2        1   \n",
       "\n",
       "       processType  processPattern processLevel  sentenceCount  \\\n",
       "0                A              99            하              9   \n",
       "1                A              99            하             13   \n",
       "2                A              99            하              9   \n",
       "3                A              99            하             22   \n",
       "4                A              99            하             13   \n",
       "...            ...             ...          ...            ...   \n",
       "225493           A               0            하              8   \n",
       "225494           A               0            하              9   \n",
       "225495           A               0            하             14   \n",
       "225496           A               0            하             11   \n",
       "225497           A               0            하              7   \n",
       "\n",
       "                                             sentenceInfo  processSentencenum  \n",
       "0       [{'sentenceNo': 1, 'sentenceContent': '\\\\\"사죄한다...                 NaN  \n",
       "1       [{'sentenceNo': 1, 'sentenceContent': '한국기업지배구...                 NaN  \n",
       "2       [{'sentenceNo': 1, 'sentenceContent': '런던 현지 시...                 NaN  \n",
       "3       [{'sentenceNo': 1, 'sentenceContent': \"한국생산성본부...                 NaN  \n",
       "4       [{'sentenceNo': 1, 'sentenceContent': '한국교직원공제...                 NaN  \n",
       "...                                                   ...                 ...  \n",
       "225493  [\"Sentence No\": 1, 'SentenceContensant': The g...                 0.0  \n",
       "225494  [\"Extensence No\": One's story:'sentenceContens...                 0.0  \n",
       "225495  [\"Extensence No\": One's Saint-Systress for a l...                 0.0  \n",
       "225496  ['SentenceNo': 1,'senceContensant': More than ...                 0.0  \n",
       "225497  [\"Extensence No': One'sence Conservations': 'E...                 0.0  \n",
       "\n",
       "[225498 rows x 14 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "862c9967",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-13T03:41:56.642225Z",
     "iopub.status.busy": "2024-11-13T03:41:56.642036Z",
     "iopub.status.idle": "2024-11-13T03:41:56.715742Z",
     "shell.execute_reply": "2024-11-13T03:41:56.715081Z"
    },
    "papermill": {
     "duration": 0.077432,
     "end_time": "2024-11-13T03:41:56.718549",
     "exception": false,
     "start_time": "2024-11-13T03:41:56.641117",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                                                newsTitle\n",
      "88837         EnoB Inc. Spreading Happiness through music\n",
      "88852                                  Philips, Shell, HP\n",
      "196007  Instead, the leading mobile disciplinarian ser...\n",
      "196008  Explicit platform followers... impacts a prefe...\n",
      "196009                             I'll meet you at home.\n",
      "...                                                   ...\n",
      "225489      I'm going to get you a ticket for a BTS show.\n",
      "225490  Wartime, youth housing, support of mortgage lo...\n",
      "225491  The next generation of future people, we're ta...\n",
      "225495                          \"You haven't left yet...\"\n",
      "225497  Attention, the Ministry of Education, Superlig...\n",
      "\n",
      "[12478 rows x 1 columns]\n"
     ]
    }
   ],
   "source": [
    "# 영어로만 이루어진 newsTitle 필터링\n",
    "english_titles_df = df[df['newsTitle'].str.match(r'^[A-Za-z\\s,.!?\\'\"]+$', na=False)]\n",
    "\n",
    "# 결과 출력\n",
    "print(english_titles_df[['newsTitle']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "5e890a87",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-13T03:41:56.720068Z",
     "iopub.status.busy": "2024-11-13T03:41:56.719880Z",
     "iopub.status.idle": "2024-11-13T03:41:56.731772Z",
     "shell.execute_reply": "2024-11-13T03:41:56.731164Z"
    },
    "papermill": {
     "duration": 0.016987,
     "end_time": "2024-11-13T03:41:56.735806",
     "exception": false,
     "start_time": "2024-11-13T03:41:56.718819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>newsID</th>\n",
       "      <th>newsCategory</th>\n",
       "      <th>newsSubcategory</th>\n",
       "      <th>newsTitle</th>\n",
       "      <th>newsSubTitle</th>\n",
       "      <th>newsContent</th>\n",
       "      <th>partNum</th>\n",
       "      <th>useType</th>\n",
       "      <th>processType</th>\n",
       "      <th>processPattern</th>\n",
       "      <th>processLevel</th>\n",
       "      <th>sentenceCount</th>\n",
       "      <th>sentenceInfo</th>\n",
       "      <th>processSentencenum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>EC_M02_000001</td>\n",
       "      <td>경제</td>\n",
       "      <td>일반</td>\n",
       "      <td>[오늘의 SR이슈] 윤리 문제 불거진 종근당 회장 조사 마치고 귀가…\\\"사죄한다\\\"</td>\n",
       "      <td>NaN</td>\n",
       "      <td>\\\"사죄한다.\\\" 운전기사들에게 허구한 날 폭언을 퍼부어 윤리 문제가 불거진 이장한...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>9</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': '\\\\\"사죄한다...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>EC_M02_000006</td>\n",
       "      <td>경제</td>\n",
       "      <td>은행</td>\n",
       "      <td>한국기업지배구조원 733개 기업 ESG 등급 부여</td>\n",
       "      <td>NaN</td>\n",
       "      <td>한국기업지배구조원이 8월 31일 국내 상장회사의 환경경영(E), 사회책임경영(S),...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>13</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': '한국기업지배구...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>EC_M02_000008</td>\n",
       "      <td>경제</td>\n",
       "      <td>일반</td>\n",
       "      <td>2017 다우존스 지속가능경영지수 어떤 기업이 편입되었나?</td>\n",
       "      <td>NaN</td>\n",
       "      <td>런던 현지 시각으로 7일, 스탠다드앤푸어스 다우존스 인디시즈와 로베코샘이 다우존스지...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>9</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': '런던 현지 시...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>EC_M02_000009</td>\n",
       "      <td>경제</td>\n",
       "      <td>일반</td>\n",
       "      <td>[2017 DJSI] 지수 편입 국내 기업의 특징과 현황</td>\n",
       "      <td>NaN</td>\n",
       "      <td>한국생산성본부(회장 홍순직)는 9월 7일 '2017 다우존스 지속가능경영지수'(Do...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>22</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': \"한국생산성본부...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>EC_M02_000011</td>\n",
       "      <td>경제</td>\n",
       "      <td>은행</td>\n",
       "      <td>한국교직원공제회, 13일 스튜어드십 코드 도입, 사회책임투자 전면 시행 결정</td>\n",
       "      <td>NaN</td>\n",
       "      <td>한국교직원공제회는 13일 운영위원회를 열어 스튜어드십 코드를 도입하기로 결정했다.\\...</td>\n",
       "      <td>P1</td>\n",
       "      <td>0</td>\n",
       "      <td>A</td>\n",
       "      <td>99</td>\n",
       "      <td>하</td>\n",
       "      <td>13</td>\n",
       "      <td>[{'sentenceNo': 1, 'sentenceContent': '한국교직원공제...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225493</th>\n",
       "      <td>SO_M07_924890</td>\n",
       "      <td>사회</td>\n",
       "      <td>Country</td>\n",
       "      <td>There's a group of 55 new team members, 220 in...</td>\n",
       "      <td>Fifty-two teams of people using STEAM to solve...</td>\n",
       "      <td>A group of students and high school students i...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>8</td>\n",
       "      <td>[\"Sentence No\": 1, 'SentenceContensant': The g...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225494</th>\n",
       "      <td>SO_M07_924892</td>\n",
       "      <td>사회</td>\n",
       "      <td>Social General</td>\n",
       "      <td>Yuan victim, meta-responsibility.....similarit...</td>\n",
       "      <td>\"Arise from the brainwashing of the Korean gov...</td>\n",
       "      <td>\"It is a wonderful day to live in Japan's SNS,...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>9</td>\n",
       "      <td>[\"Extensence No\": One's story:'sentenceContens...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225495</th>\n",
       "      <td>SO_M07_924897</td>\n",
       "      <td>사회</td>\n",
       "      <td>Social General</td>\n",
       "      <td>\"You haven't left yet...\"</td>\n",
       "      <td>I recommend summer travel items such as Coreyl...</td>\n",
       "      <td>The following 16 days, Corlelell announced tha...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>14</td>\n",
       "      <td>[\"Extensence No\": One's Saint-Systress for a l...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225496</th>\n",
       "      <td>SO_M07_924909</td>\n",
       "      <td>사회</td>\n",
       "      <td>Social General</td>\n",
       "      <td>Half a mental patient is not getting a medical...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>An analysis indicates that more than half of t...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>11</td>\n",
       "      <td>['SentenceNo': 1,'senceContensant': More than ...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>225497</th>\n",
       "      <td>SO_M07_924915</td>\n",
       "      <td>사회</td>\n",
       "      <td>Country</td>\n",
       "      <td>Attention, the Ministry of Education, Superlig...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>For example, in the United States, in the Unit...</td>\n",
       "      <td>P2</td>\n",
       "      <td>1</td>\n",
       "      <td>A</td>\n",
       "      <td>0</td>\n",
       "      <td>하</td>\n",
       "      <td>7</td>\n",
       "      <td>[\"Extensence No': One'sence Conservations': 'E...</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>225498 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               newsID newsCategory newsSubcategory  \\\n",
       "0       EC_M02_000001           경제              일반   \n",
       "1       EC_M02_000006           경제              은행   \n",
       "2       EC_M02_000008           경제              일반   \n",
       "3       EC_M02_000009           경제              일반   \n",
       "4       EC_M02_000011           경제              은행   \n",
       "...               ...          ...             ...   \n",
       "225493  SO_M07_924890           사회         Country   \n",
       "225494  SO_M07_924892           사회  Social General   \n",
       "225495  SO_M07_924897           사회  Social General   \n",
       "225496  SO_M07_924909           사회  Social General   \n",
       "225497  SO_M07_924915           사회         Country   \n",
       "\n",
       "                                                newsTitle  \\\n",
       "0          [오늘의 SR이슈] 윤리 문제 불거진 종근당 회장 조사 마치고 귀가…\\\"사죄한다\\\"   \n",
       "1                             한국기업지배구조원 733개 기업 ESG 등급 부여   \n",
       "2                        2017 다우존스 지속가능경영지수 어떤 기업이 편입되었나?   \n",
       "3                         [2017 DJSI] 지수 편입 국내 기업의 특징과 현황   \n",
       "4              한국교직원공제회, 13일 스튜어드십 코드 도입, 사회책임투자 전면 시행 결정   \n",
       "...                                                   ...   \n",
       "225493  There's a group of 55 new team members, 220 in...   \n",
       "225494  Yuan victim, meta-responsibility.....similarit...   \n",
       "225495                          \"You haven't left yet...\"   \n",
       "225496  Half a mental patient is not getting a medical...   \n",
       "225497  Attention, the Ministry of Education, Superlig...   \n",
       "\n",
       "                                             newsSubTitle  \\\n",
       "0                                                     NaN   \n",
       "1                                                     NaN   \n",
       "2                                                     NaN   \n",
       "3                                                     NaN   \n",
       "4                                                     NaN   \n",
       "...                                                   ...   \n",
       "225493  Fifty-two teams of people using STEAM to solve...   \n",
       "225494  \"Arise from the brainwashing of the Korean gov...   \n",
       "225495  I recommend summer travel items such as Coreyl...   \n",
       "225496                                                NaN   \n",
       "225497                                                NaN   \n",
       "\n",
       "                                              newsContent partNum  useType  \\\n",
       "0       \\\"사죄한다.\\\" 운전기사들에게 허구한 날 폭언을 퍼부어 윤리 문제가 불거진 이장한...      P1        0   \n",
       "1       한국기업지배구조원이 8월 31일 국내 상장회사의 환경경영(E), 사회책임경영(S),...      P1        0   \n",
       "2       런던 현지 시각으로 7일, 스탠다드앤푸어스 다우존스 인디시즈와 로베코샘이 다우존스지...      P1        0   \n",
       "3       한국생산성본부(회장 홍순직)는 9월 7일 '2017 다우존스 지속가능경영지수'(Do...      P1        0   \n",
       "4       한국교직원공제회는 13일 운영위원회를 열어 스튜어드십 코드를 도입하기로 결정했다.\\...      P1        0   \n",
       "...                                                   ...     ...      ...   \n",
       "225493  A group of students and high school students i...      P2        1   \n",
       "225494  \"It is a wonderful day to live in Japan's SNS,...      P2        1   \n",
       "225495  The following 16 days, Corlelell announced tha...      P2        1   \n",
       "225496  An analysis indicates that more than half of t...      P2        1   \n",
       "225497  For example, in the United States, in the Unit...      P2        1   \n",
       "\n",
       "       processType  processPattern processLevel  sentenceCount  \\\n",
       "0                A              99            하              9   \n",
       "1                A              99            하             13   \n",
       "2                A              99            하              9   \n",
       "3                A              99            하             22   \n",
       "4                A              99            하             13   \n",
       "...            ...             ...          ...            ...   \n",
       "225493           A               0            하              8   \n",
       "225494           A               0            하              9   \n",
       "225495           A               0            하             14   \n",
       "225496           A               0            하             11   \n",
       "225497           A               0            하              7   \n",
       "\n",
       "                                             sentenceInfo  processSentencenum  \n",
       "0       [{'sentenceNo': 1, 'sentenceContent': '\\\\\"사죄한다...                 NaN  \n",
       "1       [{'sentenceNo': 1, 'sentenceContent': '한국기업지배구...                 NaN  \n",
       "2       [{'sentenceNo': 1, 'sentenceContent': '런던 현지 시...                 NaN  \n",
       "3       [{'sentenceNo': 1, 'sentenceContent': \"한국생산성본부...                 NaN  \n",
       "4       [{'sentenceNo': 1, 'sentenceContent': '한국교직원공제...                 NaN  \n",
       "...                                                   ...                 ...  \n",
       "225493  [\"Sentence No\": 1, 'SentenceContensant': The g...                 0.0  \n",
       "225494  [\"Extensence No\": One's story:'sentenceContens...                 0.0  \n",
       "225495  [\"Extensence No\": One's Saint-Systress for a l...                 0.0  \n",
       "225496  ['SentenceNo': 1,'senceContensant': More than ...                 0.0  \n",
       "225497  [\"Extensence No': One'sence Conservations': 'E...                 0.0  \n",
       "\n",
       "[225498 rows x 14 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13a15a80",
   "metadata": {
    "tags": [
     "papermill-error-cell-tag"
    ]
   },
   "source": [
    "<span id=\"papermill-error-cell\" style=\"color:red; font-family:Helvetica Neue, Helvetica, Arial, sans-serif; font-size:2em;\">Execution using papermill encountered an exception here and stopped:</span>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "172257da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-11-13T03:41:56.737152Z",
     "iopub.status.busy": "2024-11-13T03:41:56.737004Z",
     "iopub.status.idle": "2024-11-13T03:41:57.793396Z",
     "shell.execute_reply": "2024-11-13T03:41:57.791623Z"
    },
    "papermill": {
     "duration": 1.059683,
     "end_time": "2024-11-13T03:41:57.795767",
     "exception": true,
     "start_time": "2024-11-13T03:41:56.736084",
     "status": "failed"
    },
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "\"['Unnamed: 0.1'] not found in axis\"",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[6], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df  \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mUnnamed: 0.1\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      2\u001b[0m df \u001b[38;5;241m=\u001b[39m df\u001b[38;5;241m.\u001b[39mdrop(columns\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mUnnamed: 0\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
      "File \u001b[0;32m~/anaconda3/envs/SAFER/lib/python3.9/site-packages/pandas/core/frame.py:5568\u001b[0m, in \u001b[0;36mDataFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   5420\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdrop\u001b[39m(\n\u001b[1;32m   5421\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[1;32m   5422\u001b[0m     labels: IndexLabel \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   5429\u001b[0m     errors: IgnoreRaise \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m   5430\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m DataFrame \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   5431\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   5432\u001b[0m \u001b[38;5;124;03m    Drop specified labels from rows or columns.\u001b[39;00m\n\u001b[1;32m   5433\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   5566\u001b[0m \u001b[38;5;124;03m            weight  1.0     0.8\u001b[39;00m\n\u001b[1;32m   5567\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 5568\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   5569\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5570\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5571\u001b[0m \u001b[43m        \u001b[49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindex\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5572\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5573\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5574\u001b[0m \u001b[43m        \u001b[49m\u001b[43minplace\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minplace\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5575\u001b[0m \u001b[43m        \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   5576\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[0;32m~/anaconda3/envs/SAFER/lib/python3.9/site-packages/pandas/core/generic.py:4785\u001b[0m, in \u001b[0;36mNDFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4783\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m axis, labels \u001b[38;5;129;01min\u001b[39;00m axes\u001b[38;5;241m.\u001b[39mitems():\n\u001b[1;32m   4784\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m labels \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 4785\u001b[0m         obj \u001b[38;5;241m=\u001b[39m \u001b[43mobj\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_drop_axis\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4787\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m inplace:\n\u001b[1;32m   4788\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_update_inplace(obj)\n",
      "File \u001b[0;32m~/anaconda3/envs/SAFER/lib/python3.9/site-packages/pandas/core/generic.py:4827\u001b[0m, in \u001b[0;36mNDFrame._drop_axis\u001b[0;34m(self, labels, axis, level, errors, only_slice)\u001b[0m\n\u001b[1;32m   4825\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mdrop(labels, level\u001b[38;5;241m=\u001b[39mlevel, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[1;32m   4826\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 4827\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m \u001b[43maxis\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4828\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mget_indexer(new_axis)\n\u001b[1;32m   4830\u001b[0m \u001b[38;5;66;03m# Case for non-unique axis\u001b[39;00m\n\u001b[1;32m   4831\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n",
      "File \u001b[0;32m~/anaconda3/envs/SAFER/lib/python3.9/site-packages/pandas/core/indexes/base.py:7070\u001b[0m, in \u001b[0;36mIndex.drop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   7068\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m mask\u001b[38;5;241m.\u001b[39many():\n\u001b[1;32m   7069\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m-> 7070\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mlabels[mask]\u001b[38;5;241m.\u001b[39mtolist()\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not found in axis\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   7071\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m indexer[\u001b[38;5;241m~\u001b[39mmask]\n\u001b[1;32m   7072\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdelete(indexer)\n",
      "\u001b[0;31mKeyError\u001b[0m: \"['Unnamed: 0.1'] not found in axis\""
     ]
    }
   ],
   "source": [
    "df  = df.drop(columns=\"Unnamed: 0.1\")\n",
    "df = df.drop(columns=\"Unnamed: 0\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63314bcd",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "!pip install pandas googletrans==4.0.0-rc1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b4d6d03",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "source": [
    "# sample로 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "645c6b28",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from transformers import MarianMTModel, MarianTokenizer\n",
    "import pandas as pd\n",
    "\n",
    "# 모델과 토크나이저 로드\n",
    "model_name = 'Helsinki-NLP/opus-mt-ko-en'\n",
    "tokenizer = MarianTokenizer.from_pretrained(model_name)\n",
    "model = MarianMTModel.from_pretrained(model_name)\n",
    "\n",
    "# 번역 함수 정의\n",
    "def translate_text(text):\n",
    "    try:\n",
    "        translated = model.generate(**tokenizer(text, return_tensors=\"pt\", padding=True))\n",
    "        return tokenizer.decode(translated[0], skip_special_tokens=True)\n",
    "    except Exception as e:\n",
    "        print(f\"Error translating {text}: {e}\")\n",
    "        return text\n",
    "\n",
    "# 데이터프레임 읽기 및 첫 10개 행 번역\n",
    "df = pd.read_csv('/mount/nas/disk02/Data/Health/Mental_Health/BERT/real/train.csv')\n",
    "df = df.drop(columns=[\"Unnamed: 0\", \"Unnamed: 0.1\"])\n",
    "\n",
    "# 첫 10개 행만 번역\n",
    "sample_df = df.head(10).copy()\n",
    "for column in sample_df.columns:\n",
    "    sample_df[column] = sample_df[column].apply(translate_text)\n",
    "\n",
    "sample_df  # 번역된 데이터 확인용 출력\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "586a26b3",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "source": [
    "- 오류\n",
    "1. 텍스트 500자 길이 이상이 안됌\n",
    "    - 텍스트 길이를 500자로 제한하는것이 좋을듯함..\n",
    "2. NAN값이 있으면 빈 문자열로 대체하여 처리함\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fb3cdfb6",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from transformers import MarianMTModel, MarianTokenizer\n",
    "import pandas as pd\n",
    "\n",
    "# 모델과 토크나이저 로드\n",
    "model_name = 'Helsinki-NLP/opus-mt-ko-en'\n",
    "tokenizer = MarianTokenizer.from_pretrained(model_name)\n",
    "model = MarianMTModel.from_pretrained(model_name)\n",
    "\n",
    "# 번역 함수 정의\n",
    "def translate_text(text):\n",
    "    if pd.isna(text):  # NaN 값 처리\n",
    "        return \"\"\n",
    "    text = str(text)[:500]  # 텍스트 길이 제한\n",
    "    try:\n",
    "        translated = model.generate(**tokenizer(text, return_tensors=\"pt\", padding=True))\n",
    "        return tokenizer.decode(translated[0], skip_special_tokens=True)\n",
    "    except Exception as e:\n",
    "        print(f\"Error translating {text}: {e}\")\n",
    "        return text\n",
    "\n",
    "# 데이터프레임 읽기 및 번역\n",
    "df = pd.read_csv('/mount/nas/disk02/Data/Health/Mental_Health/BERT/real/train.csv')\n",
    "df = df.drop(columns=[\"Unnamed: 0\", \"Unnamed: 0.1\"])\n",
    "\n",
    "# 샘플 10개 번역\n",
    "sample_df = df.head(10).copy()\n",
    "for column in sample_df.columns:\n",
    "    sample_df[column] = sample_df[column].apply(translate_text)\n",
    "\n",
    "sample_df.to_csv('/mount/nas/disk02/Data/Health/Mental_Health/BERT/real/translated_sample_data.csv', index=False)\n",
    "print(\"샘플 번역이 완료되었습니다.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "06bb738b",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "sample_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d6720d6",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import pandas as pd\n",
    "# import torch\n",
    "# import time\n",
    "# from transformers import MarianTokenizer, MarianMTModel\n",
    "\n",
    "# # GPU 사용 여부 체크\n",
    "# device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "# print(f\"Using device: {device}\")\n",
    "\n",
    "# # 모델과 토크나이저 로드\n",
    "# model_name = 'Helsinki-NLP/opus-mt-ko-en'\n",
    "# tokenizer = MarianTokenizer.from_pretrained(model_name)\n",
    "# model = MarianMTModel.from_pretrained(model_name).to(device)\n",
    "\n",
    "# # 번역 함수 정의\n",
    "# def translate_text(text):\n",
    "#     if pd.isna(text):\n",
    "#         return \"\"\n",
    "#     text = str(text)[:500]  # 500자로 제한\n",
    "#     try:\n",
    "#         inputs = tokenizer(text, return_tensors=\"pt\", padding=True).to(device)\n",
    "#         translated = model.generate(**inputs)\n",
    "#         return tokenizer.decode(translated[0], skip_special_tokens=True)\n",
    "#     except Exception as e:\n",
    "#         print(f\"Error translating {text}: {e}\")\n",
    "#         return text\n",
    "\n",
    "# # 데이터프레임 읽기\n",
    "# df = pd.read_csv('/mount/nas/disk02/Data/Health/Mental_Health/BERT/real/train.csv')\n",
    "# df = df.drop(columns=[\"Unnamed: 0\", \"Unnamed: 0.1\"])\n",
    "\n",
    "# # 번역할 열 정의\n",
    "# columns_to_translate = ['sentenceInfo', 'newsSubcategory', 'newsTitle', 'newsSubTitle', 'newsContent']\n",
    "\n",
    "# # 데이터 청크 분할 (청크당 1000행)\n",
    "# chunk_size = 1000\n",
    "# chunks = [df[i:i + chunk_size] for i in range(0, len(df), chunk_size)]\n",
    "\n",
    "# # 중간 저장 함수 (덮어쓰기 방식)\n",
    "# def save_partial_results(path):\n",
    "#     partial_save_path = f\"{path}/translated_data_partial.csv\"\n",
    "#     pd.concat(chunks).to_csv(partial_save_path, index=False)\n",
    "#     print(f\"Partial results saved at {partial_save_path} ({time.strftime('%Y-%m-%d %H:%M:%S')})\")\n",
    "\n",
    "# # 번역된 샘플 출력 함수\n",
    "# def print_sample_translation(chunk):\n",
    "#     sample = chunk.head(3)  # 샘플로 상위 3개 데이터 출력\n",
    "#     for column in columns_to_translate:\n",
    "#         if column in sample.columns:\n",
    "#             print(f\"\\nSample translations from column '{column}':\")\n",
    "#             print(sample[column].tolist())\n",
    "\n",
    "# # 각 청크 번역 및 중간 저장\n",
    "# output_path = '/mount/nas/disk02/Data/Health/Mental_Health/BERT/real'\n",
    "# total_translated = 0\n",
    "\n",
    "# for chunk_index, chunk in enumerate(chunks):\n",
    "#     print(f\"\\nTranslating chunk {chunk_index + 1}/{len(chunks)}\")\n",
    "#     for column in columns_to_translate:\n",
    "#         if column in chunk.columns:\n",
    "#             chunk[column] = chunk[column].apply(translate_text)\n",
    "\n",
    "#     # 번역된 샘플 출력\n",
    "#     print_sample_translation(chunk)\n",
    "\n",
    "#     # 번역된 행 개수 출력\n",
    "#     translated_count = chunk[columns_to_translate].notna().sum().sum()\n",
    "#     total_translated += translated_count\n",
    "#     print(f\"Total translated texts so far: {total_translated}\")\n",
    "\n",
    "#     # 일정 주기마다 덮어쓰기 방식으로 중간 저장\n",
    "#     if (chunk_index + 1) % 5 == 0 or (chunk_index + 1) == len(chunks):\n",
    "#         save_partial_results(output_path)\n",
    "\n",
    "# # 최종 결과 저장\n",
    "# final_save_path = f\"{output_path}/translated_data_final.csv\"\n",
    "# pd.concat(chunks).to_csv(final_save_path, index=False)\n",
    "# print(f\"\\nFinal DataFrame saved at {final_save_path}\")\n",
    "# print(f\"Total translated texts: {total_translated}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1b93eb00",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import pandas as pd\n",
    "# import torch\n",
    "# import time\n",
    "# import os\n",
    "# from transformers import MarianTokenizer, MarianMTModel\n",
    "\n",
    "# # GPU 사용 여부 체크\n",
    "# device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "# print(f\"Using device: {device}\")\n",
    "\n",
    "# # 모델과 토크나이저 로드\n",
    "# model_name = 'Helsinki-NLP/opus-mt-ko-en'\n",
    "# tokenizer = MarianTokenizer.from_pretrained(model_name)\n",
    "# model = MarianMTModel.from_pretrained(model_name).to(device)\n",
    "\n",
    "# # 번역 함수 정의\n",
    "# def translate_text(text):\n",
    "#     if pd.isna(text):\n",
    "#         return \"\"\n",
    "#     text = str(text)[:500]  # 500자로 제한\n",
    "#     try:\n",
    "#         inputs = tokenizer(text, return_tensors=\"pt\", padding=True).to(device)\n",
    "#         translated = model.generate(**inputs)\n",
    "#         return tokenizer.decode(translated[0], skip_special_tokens=True)\n",
    "#     except Exception as e:\n",
    "#         print(f\"Error translating {text}: {e}\")\n",
    "#         return text\n",
    "\n",
    "# # 데이터프레임 읽기\n",
    "# df = pd.read_csv('/mount/nas/disk02/Data/Health/Mental_Health/BERT/real/train.csv')\n",
    "# df = df.drop(columns=[\"Unnamed: 0\", \"Unnamed: 0.1\"])\n",
    "\n",
    "# # 번역할 열 정의\n",
    "# columns_to_translate = ['sentenceInfo', 'newsSubcategory', 'newsTitle', 'newsSubTitle', 'newsContent']\n",
    "\n",
    "# # 데이터 청크 분할 (청크당 1000행)\n",
    "# chunk_size = 1000\n",
    "# chunks = [df[i:i + chunk_size] for i in range(0, len(df), chunk_size)] \n",
    "# output_path = '/mount/nas/disk02/Data/Health/Mental_Health/BERT/real'\n",
    "# partial_save_path = f\"{output_path}/translated_data_partial.csv\"\n",
    "\n",
    "\n",
    "# resume_index = 0\n",
    "\n",
    "# # 중간 저장 함수\n",
    "# def save_partial_results(path, index):\n",
    "#     partial_save_path = f\"{path}/translated_data_partial.csv\"\n",
    "#     pd.concat(chunks[:index + 1]).to_csv(partial_save_path, index=False)\n",
    "#     print(f\"Partial results saved at {partial_save_path} (Chunk index: {index})\")\n",
    "\n",
    "# # 번역된 샘플 출력 함수\n",
    "# def print_sample_translation(chunk):\n",
    "#     sample = chunk.head(3)\n",
    "#     for column in columns_to_translate:\n",
    "#         if column in sample.columns:\n",
    "#             print(f\"\\nSample translations from column '{column}':\")\n",
    "#             print(sample[column].tolist())\n",
    "\n",
    "# # 번역 작업 시작 (resume_index 이후부터)\n",
    "# total_translated = 0\n",
    "\n",
    "# for chunk_index, chunk in enumerate(chunks):\n",
    "#     # 이미 번역된 청크는 건너뜀\n",
    "#     if chunk_index <= resume_index:\n",
    "#         continue\n",
    "\n",
    "#     print(f\"\\nTranslating chunk {chunk_index + 1}/{len(chunks)}\")\n",
    "#     for column in columns_to_translate:\n",
    "#         if column in chunk.columns:\n",
    "#             chunk[column] = chunk[column].apply(translate_text)\n",
    "\n",
    "#     # 번역된 샘플 출력\n",
    "#     print_sample_translation(chunk)\n",
    "\n",
    "#     # 번역된 행 개수 출력\n",
    "#     translated_count = chunk[columns_to_translate].notna().sum().sum()\n",
    "#     total_translated += translated_count\n",
    "#     print(f\"Total translated texts so far: {total_translated}\")\n",
    "\n",
    "#     # 일정 주기마다 중간 저장\n",
    "#     if (chunk_index + 1) % 5 == 0 or (chunk_index + 1) == len(chunks):\n",
    "#         save_partial_results(output_path, chunk_index)\n",
    "\n",
    "# # 최종 결과 저장\n",
    "# final_save_path = f\"{output_path}/translated_data_final.csv\"\n",
    "# pd.concat(chunks).to_csv(final_save_path, index=False)\n",
    "# print(f\"\\nFinal DataFrame saved at {final_save_path}\")\n",
    "# print(f\"Total translated texts: {total_translated}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "72150f46",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "!pip install papermill\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e2a04773",
   "metadata": {
    "papermill": {
     "duration": null,
     "end_time": null,
     "exception": null,
     "start_time": null,
     "status": "pending"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import torch\n",
    "import os\n",
    "from transformers import MarianTokenizer, MarianMTModel\n",
    "from multiprocessing import Pool\n",
    "\n",
    "# GPU 사용 여부 체크\n",
    "device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
    "print(f\"Using device: {device}\")\n",
    "\n",
    "# 모델과 토크나이저 로드\n",
    "model_name = 'Helsinki-NLP/opus-mt-ko-en'\n",
    "tokenizer = MarianTokenizer.from_pretrained(model_name)\n",
    "model = MarianMTModel.from_pretrained(model_name).to(device)\n",
    "\n",
    "# 배치 번역 함수 정의\n",
    "def batch_translate(texts):\n",
    "    \"\"\"\n",
    "    주어진 텍스트 리스트를 배치로 번역하는 함수.\n",
    "    \"\"\"\n",
    "    inputs = tokenizer(texts, return_tensors=\"pt\", padding=True, truncation=True).to(device)\n",
    "    with torch.no_grad():\n",
    "        translated = model.generate(**inputs)\n",
    "    return [tokenizer.decode(t, skip_special_tokens=True) for t in translated]\n",
    "\n",
    "# 멀티프로세싱을 위한 번역 함수\n",
    "def translate_chunk(chunk):\n",
    "    \"\"\"\n",
    "    데이터프레임의 특정 청크를 번역하는 함수.\n",
    "    각 열에서 텍스트를 추출하고 배치 번역 후 다시 할당합니다.\n",
    "    \"\"\"\n",
    "    for column in columns_to_translate:\n",
    "        if column in chunk.columns:\n",
    "            texts = chunk[column].astype(str).tolist()\n",
    "            translated_texts = batch_translate(texts)\n",
    "            chunk[column] = translated_texts\n",
    "\n",
    "            # 샘플 번역 결과 출력 (첫 3개)\n",
    "            print(f\"\\nSample translations from column '{column}':\")\n",
    "            for i in range(min(3, len(translated_texts))):\n",
    "                print(f\"Original: {texts[i]}\")\n",
    "                print(f\"Translated: {translated_texts[i]}\")\n",
    "                print(\"-\" * 50)\n",
    "    return chunk\n",
    "\n",
    "# 데이터 읽기\n",
    "df = pd.read_csv('/mount/nas/disk02/Data/Health/Mental_Health/BERT/real/train.csv')\n",
    "df = df.drop(columns=[\"Unnamed: 0\", \"Unnamed: 0.1\"])\n",
    "\n",
    "# 번역할 열 정의\n",
    "columns_to_translate = ['sentenceInfo', 'newsSubcategory', 'newsTitle', 'newsSubTitle', 'newsContent']\n",
    "\n",
    "# 데이터 분할 (10만 개씩)\n",
    "split_size = 100000\n",
    "data_parts = [df[i:i + split_size] for i in range(0, len(df), split_size)]\n",
    "output_path = '/mount/nas/disk02/Data/Health/Mental_Health/BERT/real'\n",
    "num_workers = 4  # 멀티프로세싱 설정\n",
    "\n",
    "# 중간 저장 함수\n",
    "def save_partial_results(data, index):\n",
    "    \"\"\"\n",
    "    번역된 데이터를 중간 저장하는 함수.\n",
    "    \"\"\"\n",
    "    partial_save_path = f\"{output_path}/translated_data_part{index + 1}.csv\"\n",
    "    pd.concat(data).to_csv(partial_save_path, index=False)\n",
    "    print(f\"Part {index + 1} saved at {partial_save_path}\")\n",
    "\n",
    "# 번역 작업 수행\n",
    "if __name__ == \"__main__\":\n",
    "    import multiprocessing\n",
    "    multiprocessing.set_start_method(\"spawn\")  # 'spawn' 방식으로 변경\n",
    "\n",
    "    for part_index, data_part in enumerate(data_parts):\n",
    "        print(f\"\\nTranslating part {part_index + 1}/{len(data_parts)}\")\n",
    "\n",
    "        # 데이터 청크 분할 (청크당 1000행)\n",
    "        chunk_size = 1000\n",
    "        chunks = [data_part[i:i + chunk_size] for i in range(0, len(data_part), chunk_size)]\n",
    "\n",
    "        # 멀티프로세싱 번역 작업\n",
    "        with Pool(num_workers) as pool:\n",
    "            translated_chunks = pool.map(translate_chunk, chunks)\n",
    "\n",
    "        # 중간 저장\n",
    "        save_partial_results(translated_chunks, part_index)\n",
    "\n",
    "    print(\"\\nAll parts translated and saved successfully.\")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "SAFER",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.17"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 33.174641,
   "end_time": "2024-11-13T03:41:58.417908",
   "environment_variables": {},
   "exception": true,
   "input_path": "data.ipynb",
   "output_path": "-",
   "parameters": {},
   "start_time": "2024-11-13T03:41:25.243267",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}Traceback (most recent call last):
  File "/home/ccl/anaconda3/envs/SAFER/bin/papermill", line 8, in <module>
    sys.exit(papermill())
  File "/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/click/core.py", line 1157, in __call__
    return self.main(*args, **kwargs)
  File "/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/click/core.py", line 1078, in main
    rv = self.invoke(ctx)
  File "/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/click/core.py", line 1434, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/click/core.py", line 783, in invoke
    return __callback(*args, **kwargs)
  File "/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/click/decorators.py", line 33, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/papermill/cli.py", line 235, in papermill
    execute_notebook(
  File "/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/papermill/execute.py", line 131, in execute_notebook
    raise_for_execution_errors(nb, output_path)
  File "/home/ccl/anaconda3/envs/SAFER/lib/python3.9/site-packages/papermill/execute.py", line 251, in raise_for_execution_errors
    raise error
papermill.exceptions.PapermillExecutionError: 
---------------------------------------------------------------------------
Exception encountered at "In [6]":
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
Cell In[6], line 1
----> 1 df  = df.drop(columns="Unnamed: 0.1")
      2 df = df.drop(columns="Unnamed: 0")

File ~/anaconda3/envs/SAFER/lib/python3.9/site-packages/pandas/core/frame.py:5568, in DataFrame.drop(self, labels, axis, index, columns, level, inplace, errors)
   5420 def drop(
   5421     self,
   5422     labels: IndexLabel | None = None,
   (...)
   5429     errors: IgnoreRaise = "raise",
   5430 ) -> DataFrame | None:
   5431     """
   5432     Drop specified labels from rows or columns.
   5433 
   (...)
   5566             weight  1.0     0.8
   5567     """
-> 5568     return super().drop(
   5569         labels=labels,
   5570         axis=axis,
   5571         index=index,
   5572         columns=columns,
   5573         level=level,
   5574         inplace=inplace,
   5575         errors=errors,
   5576     )

File ~/anaconda3/envs/SAFER/lib/python3.9/site-packages/pandas/core/generic.py:4785, in NDFrame.drop(self, labels, axis, index, columns, level, inplace, errors)
   4783 for axis, labels in axes.items():
   4784     if labels is not None:
-> 4785         obj = obj._drop_axis(labels, axis, level=level, errors=errors)
   4787 if inplace:
   4788     self._update_inplace(obj)

File ~/anaconda3/envs/SAFER/lib/python3.9/site-packages/pandas/core/generic.py:4827, in NDFrame._drop_axis(self, labels, axis, level, errors, only_slice)
   4825         new_axis = axis.drop(labels, level=level, errors=errors)
   4826     else:
-> 4827         new_axis = axis.drop(labels, errors=errors)
   4828     indexer = axis.get_indexer(new_axis)
   4830 # Case for non-unique axis
   4831 else:

File ~/anaconda3/envs/SAFER/lib/python3.9/site-packages/pandas/core/indexes/base.py:7070, in Index.drop(self, labels, errors)
   7068 if mask.any():
   7069     if errors != "ignore":
-> 7070         raise KeyError(f"{labels[mask].tolist()} not found in axis")
   7071     indexer = indexer[~mask]
   7072 return self.delete(indexer)

KeyError: "['Unnamed: 0.1'] not found in axis"

